#!/bin/bash
#
# (c) 2013-2014 - Bertrand Jacquin <beber@meleeweb.net>
# http://git.meleeweb.net/distros/gentoo/portage.git/tree/sys-apps/IPMIView/files/IPMIView-wrapper
#

function die () {
	echo "FATAL: $@"
	exit 1
}

BIN="${0##*/}"

PN="ipmiview"
PVR="$(java-config --query PVR --package ${PN})"

JAVA_HOME="$(java-config --jre-home)"
CLASSPATH="$(java-config --classpath ${PN})"
LIBRARY_PATH="$(java-config --library ${PN})"

if [[ ! -e "/usr/share/${PN}/lib/${BIN}.jar" ]] ; then
	die "/usr/share/${PN}/lib/${BIN}.jar is missing"
elif [[ ! ${CLASSPATH} ]] ; then
	die "java-config --classpath ${PN} return nothing"
elif [[ ! ${LIBRARY_PATH} ]] ; then
	die "java-config --library ${PN} return nothing"
fi

# IPMIView has hardcoded java exec like:
#   java -Djava.library.path=. -jar iKVM.jar ...
#
# If you change current directory to /usr/share/IPMIView/lib
# Then IPMIView20 try to create .properties files but but get denied
# due to directory permissions
#   --- error to write log[timeout.properties]! ---
#   java.io.FileNotFoundException: ./account.properties (Permission denied)
#   ...
#
# So lets fake where the jar remains and create a dumb symlink to real
# jar so the java exec can use -Djava.library.path=. and create theses
# properties files
#
# The same apply for .so files
[[ ! -d "${HOME}/.${PN}" ]] && mkdir -p "${HOME}/.${PN}"
cd "${HOME}/.${PN}" || die "Failed to change directory to ${HOME}/.${PN}"

# Flush that fake IPMIView root directory when IPMIView get upgraded
if [[ "/usr/share/${PN}/package.env" -nt PVR ]] ; then
	rm -f *.jar *.so
	echo "${PVR}" > PVR
fi

while read -d : ; do
	[[ ! -L "${REPLY##*/}" ]] && ln -snf "${REPLY}" "${REPLY##*/}"
done <<< "${CLASSPATH}:"

while read ; do
	[[ ! -L "${REPLY##*/}" ]] && ln -snf "${REPLY}" "${REPLY##*/}"
done < <(find "${LIBRARY_PATH}" -type f -name '*.so')

exec "${JAVA_HOME}/bin/java" \
	-classpath "${CLASSPATH}" \
	-jar "/usr/share/${PN}/lib/${BIN}.jar"
